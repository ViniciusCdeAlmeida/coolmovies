// Mocks generated by Mockito 5.4.4 from annotations
// in coolmovies/test/mock/domain/movie_repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:coolmovies/domain/entities/movie_detail_entity.dart' as _i2;
import 'package:coolmovies/domain/entities/movie_list_entity.dart' as _i6;
import 'package:coolmovies/domain/entities/movie_review_entity.dart' as _i3;
import 'package:coolmovies/infra/repositories/movie_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailEntity_0 extends _i1.SmartFake
    implements _i2.MovieDetailEntity {
  _FakeMovieDetailEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieReviewEntity_1 extends _i1.SmartFake
    implements _i3.MovieReviewEntity {
  _FakeMovieReviewEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i4.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.MovieListEntity>> getMovies({
    int? page = 1,
    String? search = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
          {
            #page: page,
            #search: search,
          },
        ),
        returnValue: _i5.Future<List<_i6.MovieListEntity>>.value(
            <_i6.MovieListEntity>[]),
      ) as _i5.Future<List<_i6.MovieListEntity>>);

  @override
  _i5.Future<dynamic> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<_i2.MovieDetailEntity> getMovie({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovie,
          [],
          {#id: id},
        ),
        returnValue:
            _i5.Future<_i2.MovieDetailEntity>.value(_FakeMovieDetailEntity_0(
          this,
          Invocation.method(
            #getMovie,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i2.MovieDetailEntity>);

  @override
  _i5.Future<_i3.MovieReviewEntity> addMovieReview({
    required String? title,
    required String? userId,
    required String? movieId,
    int? rating = 1,
    String? body = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieReview,
          [],
          {
            #title: title,
            #userId: userId,
            #movieId: movieId,
            #rating: rating,
            #body: body,
          },
        ),
        returnValue:
            _i5.Future<_i3.MovieReviewEntity>.value(_FakeMovieReviewEntity_1(
          this,
          Invocation.method(
            #addMovieReview,
            [],
            {
              #title: title,
              #userId: userId,
              #movieId: movieId,
              #rating: rating,
              #body: body,
            },
          ),
        )),
      ) as _i5.Future<_i3.MovieReviewEntity>);

  @override
  _i5.Future<void> removeMovieReview({required String? reviewId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMovieReview,
          [],
          {#reviewId: reviewId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
